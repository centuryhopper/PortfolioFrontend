@page "/blogcard/{Title}"
@using Business.Entities
@using Newtonsoft.Json
@inject HttpClient httpClient


@if (Model is null)
{
    <p class="text-danger">blog not found @Title :( </p>
}
else
{
    <div class="text-center">

    <a href="blogs"
        class="m-20 bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded">Back
        to Blogs</a>
    <h2 class="m-5"><b>@Model.Title</b></h2>
    <hr />
    <div class="m-5">
        @Model.FullDesc
    </div>

    @if (Model.VideoUrls is not null)
        {
            @foreach (var videoUrlModel in @Model.VideoUrls)
            {
                <div class="video-player">
                    <iframe class="embedded-video" src="@videoUrlModel.url" title="@videoUrlModel.title" frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        allowfullscreen></iframe>
                </div>
            }
        }
        <hr />
    </div>
}


@code {

    [Parameter]
    public string Title { get; set; }

    protected BlogModel? Model { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        // var client = httpClientFactory.CreateClient("API");

        var response = await
        httpClient.GetAsync($"https://portfoliobackend-production-95c1.up.railway.app/api/Blogs/get-by-title/{Title}");

        //Console.WriteLine(response.IsSuccessStatusCode);

        if (response.IsSuccessStatusCode)
        {
            var data = await response.Content.ReadFromJsonAsync<BlogModel>();

            //var dto = JsonConvert.DeserializeObject<BlogModel>(data);
            //System.Console.WriteLine(dto);

            Model = data;
        }
    }
}